{"version":3,"sources":["reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","services/bookstore-service.js","components/shop-header/index.js","components/shop-header/shop-header.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.js","components/book-list-item/book-list-item.js","actions/index.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list/book-list.js","components/book-list/index.js","components/shopping-cart-table/shopping-cart-table.js","components/pages/home-page.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundry/error-boundry.js","components/error-boundry/index.js","index.js"],"names":["updateBookList","state","action","undefined","books","loading","error","type","payload","bookList","updateOrder","bookId","quantity","cartItems","shoppingCart","book","find","id","itemIndex","findIndex","newItem","item","count","title","total","price","updateCartItem","newCartItems","idx","slice","updateCartItems","newTotal","reduce","currentSum","updateOredrTotal","newCount","currentCount","updateOredrCount","oredrTotal","orderCount","updateShoppingCart","reducer","store","createStore","BookstoreService","data","author","coverImage","Promise","resolve","reject","setTimeout","Math","random","Error","ShopHeader","connect","numItems","className","to","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","BookListItem","onAddedToCart","src","alt","onClick","bookAddedToCart","fetchBooks","dispatch","getBooks","then","catch","err","compose","funcs","comp","reduceRight","wrapped","f","Spinner","ErrorIndicator","BookList","map","BookListContainer","this","Component","ownProps","mapDispatchToProps","onIncrease","onDecrease","onDelete","items","HomePage","CartPage","App","role","path","index","element","ErrorBoundry","hasError","setState","children","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.4439f48b.chunk.js","sourcesContent":["const updateBookList = (state, action) => {\r\n  if (state === undefined) {\r\n    return {\r\n      books: [],\r\n      loading: true,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  switch (action.type) {\r\n    case \"FETCH_BOOKS_REQUEST\":\r\n      return {\r\n        books: [],\r\n        loading: true,\r\n        error: null,\r\n      }\r\n\r\n    case \"FETCH_BOOKS_SUCCESS\":\r\n      return {\r\n        books: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      }\r\n\r\n    case \"FETCH_BOOKS_FAILURE\":\r\n      return {\r\n        books: [],\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state.bookList\r\n  }\r\n}\r\n\r\nexport default updateBookList\r\n","const updateCartItems = (cartItems, item, idx) => {\r\n  if (item.count === 0) {\r\n    return [...cartItems.slice(0, idx), ...cartItems.slice(idx + 1)]\r\n  }\r\n  if (idx === -1) {\r\n    return [...cartItems, item]\r\n  }\r\n  return [...cartItems.slice(0, idx), item, ...cartItems.slice(idx + 1)]\r\n}\r\n\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n  const { id = book.id, count = 0, title = book.title, total = 0 } = item\r\n\r\n  return {\r\n    id,\r\n    title,\r\n    count: count + quantity,\r\n    total: total + quantity * book.price,\r\n  }\r\n}\r\n\r\nconst updateOredrTotal = newCartItems => {\r\n  const total = newCartItems.reduce(\r\n    (currentSum, { total }) => currentSum + total,\r\n    0\r\n  )\r\n  return total\r\n}\r\nconst updateOredrCount = newCartItems => {\r\n  const count = newCartItems.reduce(\r\n    (currentCount, { count }) => currentCount + count,\r\n    0\r\n  )\r\n  return count\r\n}\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n  const {\r\n    bookList: { books },\r\n    shoppingCart: { cartItems },\r\n  } = state\r\n  const book = books.find(({ id }) => id === bookId)\r\n  const itemIndex = cartItems.findIndex(({ id }) => id === bookId)\r\n  const item = cartItems[itemIndex]\r\n\r\n  const newItem = updateCartItem(book, item, quantity)\r\n  const newCartItems = updateCartItems(cartItems, newItem, itemIndex)\r\n  const newTotal = updateOredrTotal(newCartItems)\r\n  const newCount = updateOredrCount(newCartItems)\r\n\r\n  return {\r\n    cartItems: newCartItems,\r\n    oredrTotal: newTotal,\r\n    orderCount: newCount,\r\n  }\r\n}\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n  if (state === undefined) {\r\n    return {\r\n      cartItems: [],\r\n      oredrTotal: 0,\r\n      orderCount: 0,\r\n    }\r\n  }\r\n\r\n  switch (action.type) {\r\n    case \"BOOK_ADDED_TO_CART\":\r\n      return updateOrder(state, action.payload, 1)\r\n\r\n    case \"BOOK_REMOVED_FROM_CART\":\r\n      return updateOrder(state, action.payload, -1)\r\n\r\n    case \"ALL_BOOKS_REMOVED_FROM_CART\":\r\n      const item = state.shoppingCart.cartItems.find(\r\n        ({ id }) => id === action.payload\r\n      )\r\n      return updateOrder(state, action.payload, -item.count)\r\n\r\n    default:\r\n      return state.shoppingCart\r\n  }\r\n}\r\n\r\nexport default updateShoppingCart\r\n","import updateBookList from \"./book-list\"\r\nimport updateShoppingCart from \"./shopping-cart\"\r\n\r\nconst reducer = (state, action) => {\r\n  return {\r\n    bookList: updateBookList(state, action),\r\n    shoppingCart: updateShoppingCart(state, action),\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { createStore } from \"redux\"\r\n\r\nimport reducer from \"./reducers\"\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store\r\n","export default class BookstoreService {\r\n  data = [\r\n    {\r\n      id: 1,\r\n      title: \"Production-Ready Microservices\",\r\n      author: \"Susan J. Fowler\",\r\n      price: 32,\r\n      coverImage:\r\n        \"https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Release It!\",\r\n      author: \"Michael T. Nygard\",\r\n      price: 45,\r\n      coverImage:\r\n        \"https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX258_BO1,204,203,200_.jpg\",\r\n    },\r\n  ]\r\n  getBooks() {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (Math.random() > 0.8) {\r\n          reject(new Error(\"Something bad happend\"))\r\n        } else {\r\n          resolve(this.data)\r\n        }\r\n      }, 700)\r\n    })\r\n  }\r\n}\r\n","import ShopHeader from \"./shop-header\"\r\n\r\nexport default ShopHeader\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport \"./shop-header.css\"\r\n\r\nconst ShopHeader = ({ numItems, total }) => {\r\n  return (\r\n    <header className=\"shop-header \">\r\n      <Link className=\"logo text-dark\" to=\"/\">\r\n        ReStore\r\n      </Link>\r\n      <Link to=\"/cart\" className=\"shopping-cart\">\r\n        {numItems}\r\n        items (${total})<i className=\"cart-icon bi bi-bag-check\"></i>\r\n      </Link>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { orderCount, oredrTotal } }) => {\r\n  return {\r\n    numItems: orderCount,\r\n    total: oredrTotal,\r\n  }\r\n}\r\n/* \r\n<NavLink to=\"/\">HomePage</NavLink>\r\n        <div> </div>\r\n        <NavLink to=\"/cart\">CartPage</NavLink> */\r\n\r\nexport default connect(mapStateToProps)(ShopHeader)\r\n","import React from \"react\"\r\n\r\nconst {\r\n  Provider: BookstoreServiceProvider,\r\n  Consumer: BookstoreServiceConsumer,\r\n} = React.createContext()\r\n\r\nexport { BookstoreServiceProvider, BookstoreServiceConsumer }\r\n","import React from \"react\"\r\n\r\nimport { BookstoreServiceConsumer } from \"../bookstore-service-context\"\r\n\r\nconst withBookstoreService = () => Wrapped => {\r\n  return props => {\r\n    return (\r\n      <BookstoreServiceConsumer>\r\n        {bookstoreService => {\r\n          return <Wrapped {...props} bookstoreService={bookstoreService} />\r\n        }}\r\n      </BookstoreServiceConsumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withBookstoreService\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport \"./book-list-item.css\"\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n  const { title, author, price, coverImage } = book\r\n  return (\r\n    <>\r\n      <div className=\"book-list-item\">\r\n        <div className=\"book-cover\">\r\n          <Link to=\"/\">\r\n            <img src={coverImage} alt=\"cover\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"book-details\">\r\n          <Link to=\"/\" className=\"book-title\">\r\n            {title}\r\n          </Link>\r\n          <div className=\"book-author\">{author}</div>\r\n          <div className=\"book-price\">${price}</div>\r\n          <button\r\n            className=\"btn btn-outline-secondary add-to-cart\"\r\n            onClick={onAddedToCart}\r\n          >\r\n            Add to cart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookListItem\r\n","const booksRequested = () => {\r\n  return {\r\n    type: \"FETCH_BOOKS_REQUEST\",\r\n  }\r\n}\r\nconst booksLoaded = newBooks => {\r\n  return {\r\n    type: \"FETCH_BOOKS_SUCCESS\",\r\n    payload: newBooks,\r\n  }\r\n}\r\n\r\nconst booksError = error => {\r\n  return {\r\n    type: \"FETCH_BOOKS_FAILURE\",\r\n    payload: error,\r\n  }\r\n}\r\n\r\nconst bookAddedToCart = bookId => {\r\n  return {\r\n    type: \"BOOK_ADDED_TO_CART\",\r\n    payload: bookId,\r\n  }\r\n}\r\n\r\nconst bookRemovedFromCart = bookId => {\r\n  return {\r\n    type: \"BOOK_REMOVED_FROM_CART\",\r\n    payload: bookId,\r\n  }\r\n}\r\n\r\nconst allBooksRemovedFromCart = bookId => {\r\n  return {\r\n    type: \"ALL_BOOKS_REMOVED_FROM_CART\",\r\n    payload: bookId,\r\n  }\r\n}\r\n\r\nconst fetchBooks = (bookstoreService, dispatch) => () => {\r\n  dispatch(booksRequested())\r\n  bookstoreService\r\n    .getBooks()\r\n    .then(data => {\r\n      dispatch(booksLoaded(data))\r\n    })\r\n    .catch(err => dispatch(booksError(err)))\r\n}\r\n\r\nexport {\r\n  fetchBooks,\r\n  bookAddedToCart,\r\n  bookRemovedFromCart,\r\n  allBooksRemovedFromCart,\r\n}\r\n","const compose =\r\n  (...funcs) =>\r\n  comp => {\r\n    return funcs.reduceRight((wrapped, f) => f(wrapped), comp)\r\n  }\r\n\r\nexport default compose\r\n","import Spinner from \"./spinner\"\r\n\r\nexport default Spinner\r\n","import React from \"react\"\r\n\r\nimport \"./spinner.css\"\r\n\r\nconst Spinner = () => {\r\n  //return <div>loading...</div>\r\n  return (\r\n    <div className=\"gooey-container\">\r\n      <div className=\"gooey\">\r\n        <span className=\"dot\"></span>\r\n        <div className=\"dots\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import ErrorIndicator from \"./error-indicator\"\r\n\r\nexport default ErrorIndicator\r\n","import React from \"react\"\r\n\r\nimport \"./error-indicator.css\"\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div>Something went terribly wrong</div>\r\n}\r\n\r\nexport default ErrorIndicator\r\n","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { withBookstoreService } from \"../hoc\"\r\nimport BookListItem from \"../book-list-item/book-list-item.js\"\r\nimport { fetchBooks, bookAddedToCart } from \"../../actions\"\r\nimport { compose } from \"../../utils\"\r\nimport Spinner from \"../spinner\"\r\nimport ErrorIndicator from \"../error-indicator/\"\r\n\r\nimport \"./book-list.css\"\r\n\r\nconst BookList = ({ books, onAddedToCart }) => {\r\n  return (\r\n    <ul className=\"book-list\">\r\n      {books.map(book => {\r\n        return (\r\n          <li key={book.id} className=\"book-list-item-container\">\r\n            <BookListItem\r\n              book={book}\r\n              onAddedToCart={() => onAddedToCart(book.id)}\r\n            />\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\nclass BookListContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchBooks()\r\n  }\r\n\r\n  render() {\r\n    const { books, loading, error, onAddedToCart } = this.props\r\n    if (error) return <ErrorIndicator />\r\n    if (loading) return <Spinner />\r\n    return <BookList books={books} onAddedToCart={onAddedToCart} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ bookList: { books, loading, error } }) => {\r\n  return { books, loading, error }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  const { bookstoreService } = ownProps\r\n  return {\r\n    fetchBooks: fetchBooks(bookstoreService, dispatch),\r\n    onAddedToCart: id => dispatch(bookAddedToCart(id)),\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  withBookstoreService(),\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer)\r\n","import BookList from \"./book-list\"\r\n\r\nexport default BookList\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport {\r\n  bookAddedToCart,\r\n  bookRemovedFromCart,\r\n  allBooksRemovedFromCart,\r\n} from \"../../actions/\"\r\n\r\nimport \"./shopping-cart-table.css\"\r\n\r\nconst ShoppingCartTable = ({\r\n  items,\r\n  total,\r\n  onIncrease,\r\n  onDecrease,\r\n  onDelete,\r\n}) => {\r\n  const renderRow = (item, idx) => {\r\n    const { id, title, count, total } = item\r\n    return (\r\n      <tr key={id}>\r\n        <td>{idx + 1}</td>\r\n        <td>{title}</td>\r\n        <td>{count}</td>\r\n        <td>${total}</td>\r\n        <td>\r\n          <button\r\n            className=\"btn btn-outline-secondary btn-sm float-end\"\r\n            onClick={() => onDelete(id)}\r\n          >\r\n            <i className=\"bi bi-x-lg\" />\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline-secondary btn-sm float-end\"\r\n            onClick={() => onDecrease(id)}\r\n          >\r\n            <i className=\"bi bi-dash-lg\" />\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline-secondary btn-sm float-end\"\r\n            onClick={() => onIncrease(id)}\r\n          >\r\n            <i className=\"bi bi-plus-lg\" />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"shopping-cart-table\">\r\n      <h2>Your Order</h2>\r\n\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Item</th>\r\n            <th>Count</th>\r\n            <th>Price</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>{items.map(renderRow)}</tbody>\r\n      </table>\r\n\r\n      <div className=\"total\">Total: ${total}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, oredrTotal } }) => {\r\n  return {\r\n    items: cartItems,\r\n    total: oredrTotal,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onIncrease: bookAddedToCart,\r\n  onDecrease: bookRemovedFromCart,\r\n  onDelete: allBooksRemovedFromCart,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable)\r\n","import React from \"react\"\r\n\r\nimport BookList from \"../book-list\"\r\nimport ShoppingCartTable from \"../shopping-cart-table/shopping-cart-table\"\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <>\r\n      <BookList />\r\n      <ShoppingCartTable />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import React from \"react\"\r\n\r\nimport ShoppingCartTable from \"../shopping-cart-table/shopping-cart-table\"\r\n\r\nconst CartPage = () => {\r\n  return <ShoppingCartTable />\r\n}\r\n\r\nexport default CartPage\r\n","import App from \"./app\"\r\n\r\nexport default App\r\n","import React from \"react\"\r\n\r\nimport { Route, Routes } from \"react-router-dom\"\r\n\r\nimport ShopHeader from \"../shop-header\"\r\nimport { HomePage, CartPage } from \"../pages\"\r\n\r\nimport \"./app.css\"\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <main role=\"main\" className=\"container\">\r\n        <ShopHeader />\r\n        <Routes>\r\n          <Route path=\"/\">\r\n            <Route index element={<HomePage />} />\r\n            <Route path=\"cart\" element={<CartPage />} />\r\n            <Route path=\"*\" element={<h2>Page not found</h2>} />\r\n          </Route>\r\n        </Routes>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React, { Component } from \"react\"\r\n\r\nimport ErrorIndicator from \"../error-indicator\"\r\n\r\nexport default class ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false,\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n","import ErrorBoundry from \"./error-boundry\"\r\n\r\nexport default ErrorBoundry\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport { Provider } from \"react-redux\"\n\nimport { HashRouter as Router } from \"react-router-dom\"\n\nimport store from \"./store\"\n\nimport BookstoreService from \"./services/bookstore-service\"\n\nimport App from \"./components/app\"\nimport ErrorBoundry from \"./components/error-boundry\"\nimport { BookstoreServiceProvider } from \"./components/bookstore-service-context\"\n\nconst bookstoreService = new BookstoreService()\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <BookstoreServiceProvider value={bookstoreService}>\n        <Router>\n          <App />\n        </Router>\n      </BookstoreServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}